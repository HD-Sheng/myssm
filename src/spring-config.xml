<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd     
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.2.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-2.5.xsd ">
        
	<!-- 会自动注册RequestMappingHandlerMapping和RequestMappingHandlerAdapter两个Bean -->
	<mvc:annotation-driven></mvc:annotation-driven>
	<context:component-scan base-package="com.demo" />
	<!-- 使用默认的Servlet来响应静态文件
		因为在web.xml中使用DispatcherServlet拦截了所有请求url，
		而在引入静态文件的时候，DispatcherServlet会将 / 看成请求路径，找不到的时候会报404错误，而在加上这个
		 默认的Servlet时，Servlet在找不到它时会去找静态内容即js，css目录
	-->
	<mvc:default-servlet-handler/>

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/html/</value>
		</property>
		<property name="suffix">
			<value></value>
		</property>
	</bean>
	
	<!-- SpringAOP demo -->
	<bean id="transactionDemo" class="com.demo.transaction.TransactionDemo" />
	<aop:config>
		<aop:pointcut expression="execution(* com.demo.service.*.*.*(..))" id="p1" />
		<aop:aspect ref="transactionDemo">
			<!-- <aop:before method="startTransaction" pointcut-ref="p1" />
			<aop:after-returning method="commitTransaction" pointcut-ref="p1" /> -->
			<aop:around method="around" pointcut-ref="p1"/>
		</aop:aspect>
	</aop:config>

</beans>